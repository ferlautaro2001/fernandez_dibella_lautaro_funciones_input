from Especificas import pedir_opcion_menu
from Input import ingresar_datos
from Array_Generales import (
    mostrar_pyn,
    sumar_pares,
    encontrar_max_imp,
    mostrar_ordenados,
    listar_pares,
    mostrar_pos_imp
)

def main():
    datos = []
    activo = True

    while activo:
        print("""
üßÆ  MEN√ö DE OPCIONES:
1Ô∏è‚É£  Ingresar datos
2Ô∏è‚É£  Cantidad de positivos y negativos
3Ô∏è‚É£  Suma de los n√∫meros pares
4Ô∏è‚É£  Mayor n√∫mero impar
5Ô∏è‚É£  Listar los n√∫meros ingresados
6Ô∏è‚É£  Listar los n√∫meros pares
7Ô∏è‚É£  Listar los n√∫meros en posiciones impares
8Ô∏è‚É£  Salir
""")
        opcion = pedir_opcion_menu(1, 8)
        match opcion:
            case 1:
                datos = ingresar_datos(10, 1000, -1000)
                print("\n‚úÖ Datos ingresados correctamente.")

            case 2:
                if datos:
                    print(mostrar_pyn(datos))
                else:
                    print("‚ö†Ô∏è Primero debe ingresar los datos (opci√≥n 1).")

            case 3:
                if datos:
                    print(f"\n‚ûï La suma de los n√∫meros pares es: {sumar_pares(datos)}")
                else:
                    print("‚ö†Ô∏è Primero debe ingresar los datos (opci√≥n 1).")

            case 4:
                if datos:
                    print(f"\nüî∫ El mayor n√∫mero impar es: {encontrar_max_imp(datos)}")
                else:
                    print("‚ö†Ô∏è Primero debe ingresar los datos (opci√≥n 1).")

            case 5:
                if datos:
                    print("\n" + mostrar_ordenados(datos))
                else:
                    print("‚ö†Ô∏è Primero debe ingresar los datos (opci√≥n 1).")

            case 6:
                if datos:
                    print(f"\nüßÆ N√∫meros pares: {listar_pares(datos)}")
                else:
                    print("‚ö†Ô∏è Primero debe ingresar los datos (opci√≥n 1).")

            case 7:
                if datos:
                    print(f"\nüìå N√∫meros en posiciones impares: {mostrar_pos_imp(datos)}")
                else:
                    print("‚ö†Ô∏è Primero debe ingresar los datos (opci√≥n 1).")

            case 8:
                print("\nüëã Programa finalizado.")
                activo = False

if __name__ == "__main__":
    main()
